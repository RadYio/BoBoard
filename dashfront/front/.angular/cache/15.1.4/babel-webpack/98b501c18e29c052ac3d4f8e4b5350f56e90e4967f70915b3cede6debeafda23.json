{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction MeteoComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"strong\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 30);\n    i0.ɵɵelementStart(4, \"strong\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const hour_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hour_r1.time);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", hour_r1.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hour_r1.temp);\n  }\n}\nexport class MeteoComponent {\n  constructor() {\n    this.iconUrl = \"url not defined\";\n    this.bgUrl = \"url not defined\";\n    this.description = \"description not defined\";\n    this.pressure = \"pressure not defined\";\n    this.humidity = \"humidity not defined\";\n    this.temperature = \"temperature not defined\";\n    this.nextHours = [];\n    this.TodayToNext2Days = [];\n    //Init TodayToNext2Days with 3 empty elements to avoid the error \"Cannot read property 'icon' of undefined\"\n    this.TodayToNext2Days.push({\n      temp: \"99°C\",\n      icon: \"url not defined\"\n    });\n    this.TodayToNext2Days.push({\n      temp: \"99°C\",\n      icon: \"url not defined\"\n    });\n    this.TodayToNext2Days.push({\n      temp: \"99°C\",\n      icon: \"url not defined\"\n    });\n  }\n  ngOnInit() {\n    const queryUrl = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    const lat = \"lat=48.007751&\";\n    const lon = \"lon=0.198520&\";\n    const apiOptions = \"units=metric&exclude=minutely,alerts&\";\n    const apiKey = \"appid=dbb76c5d98d5dbafcb94441c6a10236e&\"; //thanks tonton\n    const lang = \"lang=fr\"; //Choice language\n    const requestFull = queryUrl + lat + lon + apiOptions + apiKey + lang;\n    fetch(requestFull).then(response => response.json()).then(data => {\n      //Background\n      const currentWeather = data.current.weather[0].main;\n      const bgBaseUrl = \"https://mdbgo.io/ascensus/mdb-advanced/img/\";\n      const bgFormat = \".gif\";\n      this.bgUrl = bgBaseUrl + currentWeather.toLowerCase() + bgFormat;\n      //Icons\n      const iconBaseUrl = \"https://openweathermap.org/img/wn/\";\n      const iconFormat = \".png\";\n      //Hourly\n      const hourly = new Date().getHours();\n      const nbHour = 6;\n      for (let i = 0; i < nbHour; i++) {\n        const icon = iconBaseUrl + data.hourly[i].weather[0].icon + iconFormat;\n        const temp = data.hourly[i].temp + \"°C\";\n        const time = hourly + i + \"h\";\n        this.nextHours.push({\n          temp,\n          icon,\n          time\n        });\n      }\n      //--- Today ---\n      //Today -- Description\n      this.description = data.current.weather[0].description;\n      //Today -- Pressure\n      this.pressure = data.current.pressure + \" hPa\";\n      //Today -- Humidity\n      this.humidity = data.current.humidity + \"%\";\n      //Today -- Icon\n      this.TodayToNext2Days[0].icon = iconBaseUrl + data.current.weather[0].icon + iconFormat;\n      this.TodayToNext2Days[0].temp = Math.round(data.current.temp).toString() + \"°C\";\n      //this.TodayToNext2Days.push({temp: Math.round(data.current.temp).toString() + \"°C\", icon: iconBaseUrl + data.current.weather[0].icon + iconFormat});\n      //Get the next 'nbDays' days\n      const nbDays = 2;\n      for (let i = 0; i < nbDays; i++) {\n        const icon = iconBaseUrl + data.daily[i].weather[0].icon + iconFormat;\n        const temp = Math.round(data.daily[i].temp.day).toString() + \"°C\";\n        this.TodayToNext2Days[i + 1].icon = icon;\n        this.TodayToNext2Days[i + 1].temp = temp;\n      }\n    });\n  }\n}\nMeteoComponent.ɵfac = function MeteoComponent_Factory(t) {\n  return new (t || MeteoComponent)();\n};\nMeteoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MeteoComponent,\n  selectors: [[\"meteo\"]],\n  decls: 54,\n  vars: 14,\n  consts: [[1, \"vh-10\"], [1, \"container\", \"py-5\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-md-9\", \"col-lg-7\", \"col-xl-5\"], [\"id\", \"wrapper-bg\", 1, \"card\", \"text-white\", \"bg-image\", \"shadow-4-strong\"], [1, \"card-header\", \"p-4\", \"border-0\"], [1, \"text-center\", \"mb-3\"], [\"id\", \"wrapper-name\", 1, \"h2\", \"mb-1\"], [\"id\", \"wrapper-description\", 1, \"mb-1\"], [\"id\", \"wrapper-temp\", 1, \"display-1\", \"mb-1\"], [1, \"\"], [\"id\", \"wrapper-pressure\"], [1, \"mx-2\"], [\"id\", \"wrapper-humidity\"], [1, \"card-body\", \"p-4\", \"border-top\", \"border-bottom\", \"mb-2\"], [1, \"row\", \"text-center\"], [\"class\", \"col-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-body\", \"px-5\"], [1, \"row\", \"align-items-center\"], [1, \"col-lg-6\"], [1, \"col-lg-2\", \"text-center\"], [\"id\", \"wrapper-icon-today\", \"alt\", \"\", 1, \"w-100\", 3, \"src\"], [1, \"col-lg-4\", \"text-end\"], [\"id\", \"wrapper-forecast-temp-today\"], [\"id\", \"wrapper-icon-tomorrow\", \"alt\", \"\", 1, \"w-100\", 3, \"src\"], [\"id\", \"wrapper-forecast-temp-tomorrow\"], [\"id\", \"wrapper-icon-dAT\", \"alt\", \"\", 1, \"w-100\", 3, \"src\"], [\"id\", \"wrapper-forecast-temp-dAT\"], [1, \"col-2\"], [1, \"d-block\", \"mb-2\"], [\"id\", \"wrapper-icon-hour\", \"alt\", \"\", 1, \"\", 3, \"src\"], [1, \"d-block\"]],\n  template: function MeteoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"p\", 7);\n      i0.ɵɵtext(8, \"Le Mans\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\", 8);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\", 9);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"span\", 10);\n      i0.ɵɵtext(14, \"Pressure: \");\n      i0.ɵɵelementStart(15, \"span\", 11);\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"span\", 12);\n      i0.ɵɵtext(18, \"|\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"span\", 10);\n      i0.ɵɵtext(20, \"Humidity: \");\n      i0.ɵɵelementStart(21, \"span\", 13);\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 14)(24, \"div\", 15);\n      i0.ɵɵtemplate(25, MeteoComponent_div_25_Template, 6, 3, \"div\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 17)(27, \"div\", 18)(28, \"div\", 19)(29, \"strong\");\n      i0.ɵɵtext(30, \"Today\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 20);\n      i0.ɵɵelement(32, \"img\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 22)(34, \"span\", 23);\n      i0.ɵɵtext(35);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 18)(37, \"div\", 19)(38, \"strong\");\n      i0.ɵɵtext(39, \"Tomorrow\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 20);\n      i0.ɵɵelement(41, \"img\", 24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 22)(43, \"span\", 25);\n      i0.ɵɵtext(44);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"div\", 18)(46, \"div\", 19)(47, \"strong\");\n      i0.ɵɵtext(48, \"Day after tomorrow\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(49, \"div\", 20);\n      i0.ɵɵelement(50, \"img\", 26);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 22)(52, \"span\", 27);\n      i0.ɵɵtext(53);\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵstyleMapInterpolate1(\"background-image: url(\", ctx.bgUrl, \")\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.description);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.TodayToNext2Days[0].temp);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.pressure);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.humidity);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.nextHours);\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.TodayToNext2Days[0].icon, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.TodayToNext2Days[0].temp);\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.TodayToNext2Days[1].icon, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.TodayToNext2Days[1].temp);\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"src\", ctx.TodayToNext2Days[2].icon, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.TodayToNext2Days[2].temp);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"#wrapper-bg[_ngcontent-%COMP%] {\\n    background-size: cover;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tZXRlby9tZXRlby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLDJCQUEyQjtJQUMzQiw0QkFBNEI7QUFDaEMiLCJzb3VyY2VzQ29udGVudCI6WyIjd3JhcHBlci1iZyB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MeteoComponent","constructor","iconUrl","bgUrl","description","pressure","humidity","temperature","nextHours","TodayToNext2Days","push","temp","icon","ngOnInit","queryUrl","lat","lon","apiOptions","apiKey","lang","requestFull","fetch","then","response","json","data","currentWeather","current","weather","main","bgBaseUrl","bgFormat","toLowerCase","iconBaseUrl","iconFormat","hourly","Date","getHours","nbHour","i","time","Math","round","toString","nbDays","daily","day","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/info/etu/l3info/a193962/Documents/ToutMonProjet/BoBoard/dashfront/front/src/app/components/meteo/meteo.component.html","/info/etu/l3info/a193962/Documents/ToutMonProjet/BoBoard/dashfront/front/src/app/components/meteo/meteo.component.ts"],"sourcesContent":["<section class=\"vh-10\">\n    <div class=\"container py-5\">\n        <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-md-9 col-lg-7 col-xl-5\">\n                <div id=\"wrapper-bg\" class=\"card text-white bg-image shadow-4-strong\" style=\"background-image: url({{bgUrl}})\">\n                    <!-- Main current data -->\n                    <div class=\"card-header p-4 border-0\">\n                        <div class=\"text-center mb-3\">\n                            <p class=\"h2 mb-1\" id=\"wrapper-name\">Le Mans</p>\n                            <p class=\"mb-1\" id=\"wrapper-description\">{{description}}</p>\n                            <p class=\"display-1 mb-1\" id=\"wrapper-temp\">{{TodayToNext2Days[0].temp}}</p>\n                            <span class=\"\">Pressure: <span id=\"wrapper-pressure\">{{pressure}}</span></span>\n                            <span class=\"mx-2\">|</span>\n                            <span class=\"\">Humidity: <span id=\"wrapper-humidity\">{{humidity}}</span></span>\n                        </div>\n                    </div>\n        \n                    <!-- Hourly forecast -->\n                    <div class=\"card-body p-4 border-top border-bottom mb-2\">\n                        <div class=\"row text-center\">\n                            <div class=\"col-2\" *ngFor=\"let hour of nextHours\">\n                                <strong class=\"d-block mb-2\">{{hour.time}}</strong>\n                                <img id=\"wrapper-icon-hour\" src=\"{{hour.icon}}\" class=\"\" alt=\"\" />\n                                <strong class=\"d-block\">{{hour.temp}}</strong>\n                            </div>\n                        </div>\n                    </div>\n        \n                    <!-- Daily forecast -->\n                    <div class=\"card-body px-5\">\n                        <div class=\"row align-items-center\">\n                            <div class=\"col-lg-6\">\n                                <strong>Today</strong>\n                            </div>\n        \n                            <div class=\"col-lg-2 text-center\">\n                                <img id=\"wrapper-icon-today\" src={{TodayToNext2Days[0].icon}} class=\"w-100\" alt=\"\" />\n                            </div>\n        \n                            <div class=\"col-lg-4 text-end\">\n                                <span id=\"wrapper-forecast-temp-today\">{{TodayToNext2Days[0].temp}}</span>\n                            </div>\n                        </div>\n        \n                        <div class=\"row align-items-center\">\n                            <div class=\"col-lg-6\">\n                                <strong>Tomorrow</strong>\n                            </div>\n        \n                            <div class=\"col-lg-2 text-center\">\n                                <img id=\"wrapper-icon-tomorrow\" src={{TodayToNext2Days[1].icon}} class=\"w-100\" alt=\"\" />\n                            </div>\n        \n                            <div class=\"col-lg-4 text-end\">\n                                <span id=\"wrapper-forecast-temp-tomorrow\">{{TodayToNext2Days[1].temp}}</span>\n                            </div>\n                        </div>\n        \n                        <div class=\"row align-items-center\">\n                            <div class=\"col-lg-6\">\n                                <strong>Day after tomorrow</strong>\n                            </div>\n        \n                            <div class=\"col-lg-2 text-center\">\n                                <img id=\"wrapper-icon-dAT\" src={{TodayToNext2Days[2].icon}} class=\"w-100\" alt=\"\" />\n                            </div>\n        \n                            <div class=\"col-lg-4 text-end\">\n                                <span id=\"wrapper-forecast-temp-dAT\">{{TodayToNext2Days[2].temp}}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>  \n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'meteo',\n  templateUrl: './meteo.component.html',\n  styleUrls: ['./meteo.component.css']\n})\n\n\nexport class MeteoComponent implements OnInit{\n  \n  iconUrl: string;\n  bgUrl: string;\n  description: string;\n  pressure: string;\n  humidity: string;\n  temperature: string;\n\n  nextHours: {\n    temp: string;\n    icon: string;\n    time: string;\n  }[];\n\n  TodayToNext2Days: {\n    temp: string;\n    icon: string;\n  }[];\n\n    constructor(){\n      this.iconUrl = \"url not defined\";\n      this.bgUrl = \"url not defined\";\n      this.description = \"description not defined\"\n      this.pressure = \"pressure not defined\";\n      this.humidity = \"humidity not defined\";\n      this.temperature = \"temperature not defined\";\n      this.nextHours = [];\n      \n      this.TodayToNext2Days = [];\n      //Init TodayToNext2Days with 3 empty elements to avoid the error \"Cannot read property 'icon' of undefined\"\n      this.TodayToNext2Days.push({temp: \"99°C\", icon: \"url not defined\"});\n      this.TodayToNext2Days.push({temp: \"99°C\", icon: \"url not defined\"});\n      this.TodayToNext2Days.push({temp: \"99°C\", icon: \"url not defined\"});\n    };\n\n    ngOnInit(): void {\n      const queryUrl = \"https://api.openweathermap.org/data/2.5/onecall?\";\n      const lat = \"lat=48.007751&\";\n      const lon = \"lon=0.198520&\";\n      const apiOptions = \"units=metric&exclude=minutely,alerts&\";\n      const apiKey = \"appid=dbb76c5d98d5dbafcb94441c6a10236e&\"; //thanks tonton\n      const lang = \"lang=fr\"; //Choice language\n      const requestFull = queryUrl + lat + lon + apiOptions + apiKey + lang;\n\n      fetch(requestFull)\n        .then((response) => response.json())\n\n        .then((data) => {\n\n          //Background\n          const currentWeather = data.current.weather[0].main;\n          const bgBaseUrl = \"https://mdbgo.io/ascensus/mdb-advanced/img/\";\n          const bgFormat = \".gif\";\n          this.bgUrl = bgBaseUrl + currentWeather.toLowerCase() + bgFormat;\n          \n          //Icons\n          const iconBaseUrl = \"https://openweathermap.org/img/wn/\";\n          const iconFormat = \".png\";\n\n          //Hourly\n          const hourly = new Date().getHours();\n          const nbHour = 6;\n          for(let i = 0; i < nbHour; i++){\n            \n            const icon = iconBaseUrl + data.hourly[i].weather[0].icon + iconFormat;\n            const temp = data.hourly[i].temp + \"°C\";\n            const time = (hourly + i) + \"h\";\n            this.nextHours.push({temp, icon, time});\n\n          }\n\n          //--- Today ---\n\n          //Today -- Description\n          this.description = data.current.weather[0].description;\n\n          //Today -- Pressure\n          this.pressure = data.current.pressure + \" hPa\";\n\n          //Today -- Humidity\n          this.humidity = data.current.humidity + \"%\";\n\n          //Today -- Icon\n          this.TodayToNext2Days[0].icon = iconBaseUrl + data.current.weather[0].icon + iconFormat;\n          this.TodayToNext2Days[0].temp = Math.round(data.current.temp).toString() + \"°C\";\n          //this.TodayToNext2Days.push({temp: Math.round(data.current.temp).toString() + \"°C\", icon: iconBaseUrl + data.current.weather[0].icon + iconFormat});\n\n          //Get the next 'nbDays' days\n          const nbDays = 2;\n          for(let i = 0; i < nbDays; i++){\n              const icon = iconBaseUrl + data.daily[i].weather[0].icon + iconFormat;\n              const temp = Math.round(data.daily[i].temp.day).toString() + \"°C\";\n              this.TodayToNext2Days[i+1].icon = icon;\n              this.TodayToNext2Days[i+1].temp = temp;\n            }\n        });\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}